# Use the Docker socket from the extension backend:
# https://docs.docker.com/desktop/extensions-sdk/guides/use-docker-socket-from-backend/
services:
  myExtension:
    image: ${DESKTOP_PLUGIN_IMAGE}
    container_name: dockerpulse
    volumes:
      - /var/run/docker.sock.raw:/var/run/docker.sock
      # Create a named volume which is mapped to the /grafana folder in the extension container
      # (The /grafana folder is added to the extension container in the extension's Dockerfile)
      - shared-grafana-volume:/grafana
      # Create a named volume which is mapped to the /prometheus folder in the extension container
      # (The /prometheus folder is added to the extension container in the extension's Dockerfile)
      - shared-prometheus-volume:/prometheus
      # Creating volumes to transfer data from the project repository to different containers is a great PRODUCTION level solution, HOWEVER volumes must be deleted before updates to prometheus and grafana configs can take place
      # TODO: docker-compose yaml for DEVELOPMENT (BIND MOUNT) and PRODUCTION
    depends_on:
      - grafana
    ports:
      # Expose port 3333 to the host so that you can see metrics on localhost:3333/metrics
      - 3333:3333

  prometheus:
    # Pulling a custom image that has been pushed to the hub that has been configured to scrape
    # from cadvisor so there is no need to create a bind mount that configures the prometheus.yml file
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      # Creating a named volume for the prometheus data
      - prometheusdata:/prometheus
      - shared-prometheus-volume:/etc/prometheus

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 2999:3000
    volumes:
      # Share the named volume with the grafana container by mapping it to /etc/grafana
      - shared-grafana-volume:/etc/grafana
    environment:
      GF_PATHS_CONFIG: /etc/grafana/grafana.ini
    depends_on:
      - prometheus

volumes:
  prometheusdata:
  shared-grafana-volume:
  shared-prometheus-volume:
