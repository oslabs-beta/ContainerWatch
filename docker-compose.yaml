# Use the Docker socket from the extension backend:
# https://docs.docker.com/desktop/extensions-sdk/guides/use-docker-socket-from-backend/
version: '3.8'

# networks:
#   monitoring:
#     driver: bridge

services:
  myExtension:
    image: ${DESKTOP_PLUGIN_IMAGE}
    volumes:
      - /var/run/docker.sock.raw:/var/run/docker.sock

  Prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - '9090:9090'

  Node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter

  Ca-advisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor

  #   node-exporter:
  #     image: prom/node-exporter:latest
  #     container_name: node-exporter
  #     restart: unless-stopped
  #     volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro
  #     command:
  #     -'- path.procfs=/host/proc'
  #     -'- path.rootfs=/rootfs'
  #     -'â€” path.sysfs=/host/sys'
  #     -'-collector.filesystem.mount-points-    exclude=^/(sys|proc|dev|host|etc)($$|/)'
  #     expose:
  #     - 9100
  #     networks:
  #     - monitoring

  # dockerpulse:
  #   image: leejun07/dockerpulse:1.0
  #   container_name: dockerpulse
  #   # extra_hosts:
  #   #   - 'unixsocket:/run/guest-services/backend.sock'
  #   volumes:
  #     - /run/guest-services/backend.sock:/run/guest-services/backend.sock
  #   command: npm start
# version: '3'
# services:
#   my-service:
#     build: .
#     extra_hosts:
#       - "unixsocket:/path/to/unix/socket"
#     volumes:
#       - /path/to/unix/socket:/path/to/unix/socket
# ... other service configurations
